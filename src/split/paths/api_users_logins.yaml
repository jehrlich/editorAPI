post:
  operationId: userLogin
  x-no-test: true
  tags:
    - User
  security: []
  summary: user login
  description: >-
    This endpoint authenticates a User from an `identifier` (normally an email
    address) and `password`. It also identifies the application making requests
    from the `apikey`. The response returns the User object for the logged-in
    User and a token for use in future secured requests, as well as a
    `fileSignature` and `filePolicy` which may be used for access to images
    stored on FileStack.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - apikey
            - identifier
            - password
          properties:
            apikey:
              type: string
              description: >-
                An API key assigned to an application for access to this API. To
                request an API key please contact the system administrator.
              example: t0CGzpQ4cgu1OBy44sBt
            identifier:
              type: string
              description: '`User.Username`, normally the same as `User.email`'
              example: testVOR
            password:
              type: string
              description: >-
                User password any characters or numbers allowed, with a minumum
                length of 10.
              minLength: 6
              example: tVpass
  responses:
    '200':
      description: Success – logged in
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SuccessfulLogin.yaml
    '400':
      $ref: ../components/responses/BadRequest.yaml
get:
  operationId: userRenewToken
  tags:
    - User
  summary: renew token
  description: >-
    This endpoint renews the User's access token. Response returns the User
    object for the logged-in User and a 24-hr token for use in future secured
    requests. It includes a `fileSignature` and `filePolicy` which may be used
    for access to images stored on FileStack.
  responses:
    '200':
      description: Success – token refreshed
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SuccessfulLogin.yaml
    '401':
      $ref: ../components/responses/Unauthorized.yaml
