openapi: 3.0.1
info:
  title: VCPR.ORG Protocol API
  version: 2.0.2
  contact:
    name: Jim Ehrlich, DVM
    email: jehrlich@vcpr.org
  description: >-
    API serving the Veterinary Protocol Manager&trade; application. &copy;
    DairySight LLC, Argyle NY 2020
servers:
  - description: Production server, uses production database.
    url: https://VCPR.ORG
  - description: Staging server, uses staging database.
security:
  - authToken: []
paths:
  /api/users/logins:
    post:
      operationId: userLogin
      x-no-test: true
      tags:
        - User
      security: []
      summary: user login
      description: >-
        This endpoint authenticates a User from an `identifier` (normally an
        email address) and `password`. It also identifies the application making
        requests from the `apikey`. The response returns the User object for the
        logged-in User and a token for use in future secured requests, as well
        as a `fileSignature` and `filePolicy` which may be used for access to
        images stored on FileStack.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - apikey
                - identifier
                - password
              properties:
                apikey:
                  type: string
                  description: >-
                    An API key assigned to an application for access to this
                    API. To request an API key please contact the system
                    administrator.
                  example: t0CGzpQ4cgu1OBy44sBt
                identifier:
                  type: string
                  description: '`User.Username`, normally the same as `User.email`'
                  example: testVOR
                password:
                  type: string
                  description: >-
                    User password any characters or numbers allowed, with a
                    minumum length of 10.
                  minLength: 6
                  example: tVpass
      responses:
        '200':
          description: Success – logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulLogin'
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      operationId: userRenewToken
      tags:
        - User
      summary: renew token
      description: >-
        This endpoint renews the User's access token. Response returns the User
        object for the logged-in User and a 24-hr token for use in future
        secured requests. It includes a `fileSignature` and `filePolicy` which
        may be used for access to images stored on FileStack.
      responses:
        '200':
          description: Success – token refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulLogin'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/users:
    get:
      operationId: getVORUserIds
      tags:
        - User
      summary: get ID and names of other VOR Users
      description: This endpoint returns the ID and names of all active VOR Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: User's ID
                        name:
                          type: string
                          description: User's Name
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    put:
      operationId: updateUser
      tags:
        - User
      summary: update-user
      description: >-
        This endpoint updates User data. Any User may update their own data,
        i.e., idempotently update User data. A VOR may update User data of a
        User in a `CLIENT` relationship with that VOR. A SAOR may update data of
        any User.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                properties:
                  updated-records:
                    type: integer
                    description: number of db records altered
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/users/{id}:
    get:
      operationId: getUser
      tags:
        - User
      summary: get user
      description: >-
        This endpoint returns User data as specified by User `id`. Any User may
        get their own data. A VOR may get User data of Users in a `CLIENT`
        relationship with that VOR. A SAOR may get data of any User.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: User ID key
          example: 2
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Unauthorized'
    delete:
      operationId: deleteUser
      x-no-test: true
      tags:
        - User
      summary: delete user
      description: >-
        This endpoint supports the (reversible) "delete" of a User by setting
        user.status to `REMOVED`. Removed Users are not visible in normal
        queries.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: User ID key
          example: 5
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: integer
                    description: number of Users deleted
  /api/users/comments:
    post:
      operationId: recordComment
      x-no-test: generates email, tested OK
      tags:
        - User
      summary: record a User comment
      description: >-
        This endpoint records a User comment to the database and emails admin.
        It supports privacy controls.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Success – comment recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  recorded:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/users/my-right-relations:
    get:
      operationId: getMyRightRelations
      tags:
        - User
      summary: get my right relations
      description: >-
        This endpoint returns Users who have the specified relationship to a
        `VOR` User.
      parameters:
        - name: relationship
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Relationship'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                example: {users: []}
    post:
      operationId: createRightRelation
      tags:
        - User
      summary: add a User with relationship
      description: >-
        This endpoint adds a User and a relationship of the type specified by
        `name` to the current User, who must be a VOR. Defaults to CLIENT
        relationship.
      parameters:
        - name: relationship
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Relationship'
        - name: usertype
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/UserType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: related User
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
  /api/protocols/sharesToAll/:
    get:
      operationId: getSharesToAll
      summary: get list of User's shared protocols
      description: This endpoint retrieves a list of User's protocols shared to all VORs.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  shares:
                    type: array
                    items:
                      type: object
                      properties:
                        pxId:
                          type: integer
                          description: Protocol ID
                        name:
                          type: string
                          description: Protocol name
                        clonable:
                          type: boolean
                          description: >-
                            switch to determine whether other VORs are allowed
                            to clone this Protocol
                          example: true
              example:
                shares:
                  - pxId: 1
                    name: example protocol
                    clonable: false
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/protocols/sharesToAll/{pxId}:
    post:
      operationId: shareToAll
      summary: share Protocol with all VOR Users
      description: This endpoint shares a User's protocol with all VOR Users.
      parameters:
        - name: pxId
          in: path
          schema:
            type: integer
          required: true
          explode: true
          description: ID of Protocol to be shared
        - name: clonable
          in: query
          schema:
            type: boolean
          required: false
          explode: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      operationId: unShareToAll
      summary: wip
      description: wip -- This endpoint probably unshares protocols to all.
      parameters:
        - name: pxId
          in: path
          example: 1
          schema:
            type: integer
          required: true
          description: ID of Protocol
      responses:
        '204':
          description: no content
  /api/protocols/shares:
    get:
      operationId: getMyProtocolShares
      tags:
        - Protocol
      summary: get my protocol shares
      description: >-
        This endpoint retrieves a User's Protocol shares, optionally filtered by
        Protocol and recipient.
      parameters:
        - name: pxFilter
          in: query
          schema:
            type: integer
          required: false
          description: select only shares of this Protocol ID
        - name: toFilter
          in: query
          schema:
            type: integer
          required: false
          description: select only shares to this VOR User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  shares:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProtocolShare'
    post:
      operationId: createProtocolShare
      tags:
        - Protocol
      summary: create protocol share
      description: This endpoint shares a protocol with another VOR User.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolShare'
      responses:
        '200':
          description: protocol shared
          content:
            application/json:
              schema:
                type: object
                properties:
                  shared:
                    type: integer
                    description: number of shares created
                    example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      operationId: deleteProtocolShare
      tags:
        - Protocol
      summary: delete protocol share
      description: This endpoint retracts a Protocol share with another VOR User.
      parameters:
        - name: pxId
          in: query
          schema:
            type: integer
          required: true
          description: Protocol ID
        - name: toVor
          in: query
          schema:
            type: integer
          required: true
          description: ID of VOR to whom Protocol was shared
      responses:
        '200':
          description: Success – Protocol share deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  un-shared:
                    type: integer
                    description: number of shares deleted
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/protocols:
    get:
      operationId: getMyProtocols
      tags:
        - Protocol
      summary: get my protocols
      description: >-
        This endpoint retrieves all Protocols owned by, or shared with, the
        current User. The default excludes deleted (status DEPRECATED)
        protocols.
      parameters:
        - name: status
          in: query
          required: false
          style: pipeDelimited
          explode: false
          description: >-
            filter Protocols to include only Protocols with listed statuses. If
            this parameter is omitted, the query defaults to all status values
            **except** DEPRECATED.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProtocolStatus'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of Protocols
                type: object
                properties:
                  protocols:
                    type: array
                    items:
                      $ref: '#/components/schemas/Protocol'
    post:
      operationId: createProtocol
      tags:
        - Protocol
      summary: create protocol
      description: This endpoint supports the creation of a Protocol.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Protocol'
      responses:
        '200':
          description: Success – recorded Protocol
          content:
            application/json:
              schema:
                type: object
                properties:
                  protocol:
                    $ref: '#/components/schemas/Protocol'
        '400':
          $ref: '#/components/responses/BadRequest'
    put:
      operationId: updateProtocol
      tags:
        - Protocol
      summary: update protocol
      description: This endpoint updates a Protocol.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Protocol'
      responses:
        '200':
          description: Success – updated Protocol
          content:
            application/json:
              schema:
                type: object
                properties:
                  protocol:
                    $ref: '#/components/schemas/Protocol'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/protocols/eligibilities:
    get:
      operationId: getEligibilities
      tags:
        - Protocol
      summary: get eligibilities
      description: >-
        This endpoint returns an array of Eligibilities from which a User may
        choose. The ID field is authoritative, i.e., is all that is needed to
        identify a particular Eligibility.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of eligibilities
                type: object
                properties:
                  eligibilities:
                    type: array
                    items:
                      $ref: '#/components/schemas/Eligibility'
  /api/protocols/diagnoses:
    get:
      operationId: getDiagnoses
      tags:
        - Protocol
      summary: get diagnoses
      description: >-
        This endpoint returns an array of Diagnoses from which a User may
        choose. The ID field is authoritative, i.e., is all that is needed to
        identify a particular Diagnosis.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of diagnoses
                type: object
                properties:
                  diagnoses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Diagnosis'
  /api/protocols/libs:
    get:
      operationId: getLibraryProtocols
      tags:
        - Protocol
      summary: get library protocols
      description: >-
        This endpoint retrieves all protocols owned by, or shared with, the
        current User.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of Protocols from public library
                type: object
                properties:
                  protocols:
                    type: array
                    items:
                      $ref: '#/components/schemas/Protocol'
  /api/protocols/dosages:
    post:
      operationId: validateDosage
      tags:
        - Protocol
      summary: validate a Dosage and return `_dose`
      description: This endpoint returns the dose data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoseFunctions'
      responses:
        '200':
          description: _dose
          content:
            application/json:
              schema:
                properties:
                  _dose:
                    type: string
                    description: string representation of submitted Dosage
  /api/protocols/libstubs:
    get:
      operationId: getLibraryPxes
      tags:
        - Protocol
      summary: get library pxes
      description: >-
        This endpoint returns all the Protocols owned by, or shared with, the
        current User.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of protocol stubs from public library
                type: object
                properties:
                  pxes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Px'
  /api/protocols/{id}:
    get:
      operationId: getProtocol
      tags:
        - Protocol
      summary: get protocol by ID
      description: This endpoint retrieves a Protocol by `protocol.id`.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          example: 7
          required: true
          description: Protocol ID key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  protocol:
                    $ref: '#/components/schemas/Protocol'
            text/html:
              schema:
                properties:
                  protocol:
                    $ref: '#/components/schemas/Protocol'
    delete:
      operationId: deleteProtocol
      tags:
        - Protocol
      summary: delete protocol
      description: >-
        this endpoint changes `protocol.status` to DELETED (this does not
        actually remove it from the database).
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: Protocol ID key
      responses:
        '200':
          description: Protocol deprecated
          content:
            application/json:
              schema:
                type: object
                properties:
                  deprecated:
                    type: integer
                    description: number of Protocols deprecated
  /api/protocols/prescriptions:
    post:
      operationId: createPrescription
      x-no-test: test
      tags:
        - Prescription
      summary: record a prescription
      description: >-
        This endpoint permanently records a Prescription and returns its
        assigned GUID (**not** idempotent). Prescriptions form a permanent
        archival record of a transaction which may be invalidated, but not
        deleted.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  prescription:
                    $ref: '#/components/schemas/PrescriptionRequest'
  /api/protocols/prescriptions/by:
    get:
      operationId: getRxBy
      tags:
        - Prescription
      summary: get my prescriptions
      description: get prescriptions prescribed by the current User.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of prescriptions accessible to current User
                properties:
                  prescriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prescription'
  /api/protocols/prescriptions/to:
    get:
      operationId: getRxTo
      tags:
        - Prescription
      summary: get my prescriptions
      description:  get prescriptions prescribed to the current User.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: array of prescriptions accessible to current User
                properties:
                  prescriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prescription'
  /api/protocols/prescriptions/{id}:
    get:
      operationId: getPrescription
      tags:
        - Prescription
      summary: get prescription by ID
      description: This endpoint retrieves a Prescription by `prescription.id`.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          example: 25yopfgh
          required: true
          description: Prescription ID key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  prescription:
                    $ref: '#/components/schemas/Prescription'
            text/html:
              schema:
                properties:
                  prescription:
                    $ref: '#/components/schemas/Prescription'
  /api/protocols/{id}/prescriptions:
    get:
      operationId: getPrescriptionsOfProtocol
      tags:
        - Prescription
      summary: get prescriptions of a protocol
      description: This endpoint retrieves Prescriptions by `protocol.id`.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          example: 7
          required: true
          description: Protocol ID key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  prescriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prescription'
  /api/labels:
    get:
      operationId: getLabels
      tags:
        - Prescription
      summary: get labels
      description: This endpoint returns the full array of drug labels.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  labels:
                    type: array
                    items:
                      $ref: '#/components/schemas/LabelClaim'
  /api/labels/inserts/{lxId}:
    get:
      operationId: getPackageInsert
      tags:
        - Prescription
      summary: get package insert
      description: This endpoint returns the label package insert.
      parameters:
        - name: lxId
          in: path
          schema:
            type: integer
          required: true
          description: label ID
          example: 32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: html
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/admin/product:
    get:
      operationId: getGbdHeaderArrayByNDC
      tags:
        - Prescription
      summary: get Greenbook Drug summary by NDC pattern
      description: >-
        This endpoint returns the summary listing of a Greenbook Drug by NDC
        pattern.
      parameters:
        - name: ndcProd
          in: query
          schema:
            type: integer
          required: false
          description: first section labeler code of a NDC
        - name: ndcLabeler
          in: query
          schema:
            type: integer
          required: false
          description: mid section product code of a NDC
        - name: ndcBrand
          in: query
          schema:
            type: integer
          required: false
          description: end section package code of a NDC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GreenbookHeader'
  /api/admin/product/{ndc}:
    get:
      operationId: getGbdHeaderByNDC
      tags:
        - Prescription
      summary: get summary listing of a Greenbook Drug
      description: >-
        This endpoint returns the summary listing of a Greenbook Drug by ndc
        identifier.
      parameters:
        - name: ndc
          in: path
          schema:
            type: string
          required: true
          description: >-
            unique 10-digit, 3-segment number.
            labelerCode-productCode-packageCode
          example: 0061-4321-03
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreenbookHeader'
            text/html:
              schema:
                type: string
  /api/spl/{ndc}:
    get:
      operationId: getGbdLinkByNDC
      tags:
        - Pharmacy
        - Untested
      summary: get detail of a Greenbook Drug as a link
      description: >-
        This
      parameters:
        - name: ndc
          in: path
          schema:
            type: string
          required: true
          description: >-
            unique hyphenated number with up to 10 digits in 2 or 3 segments as
            labelerCode-productCode-packageCode. packageCode may not be needed.
          example: 0010-3832
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: URL link to XML SPL data file
                type: string
                format: url
        '303':
          description: Redirect to SPL file served from FDA server
          content:
            text/xml:
              schema:
                description: XML SPL data file served from FDA server
                type: string
                format: xml
  /api/spl/{ndc}/{image}:
    get:
      operationId: getGbdL
      x-not-test: test
      tags:
        - Pharmacy
        - Untested
      summary: get detail of a Greenbook Drug as a link
      description: >-
        This
      parameters:
        - name: ndc
          in: path
          schema:
            type: string
          required: true
          description: >-
            unique hyphenated number with up to 10 digits in 2 or 3 segments as
            labelerCode-productCode-packageCode. packageCode may not be needed.
          example: 0010-4025
        - name: image
          in: path
          schema:
            type: string
          required: true
          description: name of image file
          example: 526779-image-02.jpg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: URL link to XML SPL data file
                type: string
                format: url
        '303':
          description: Redirect to SPL file served from FDA server
          content:
            text/xml:
              schema:
                description: XML SPL data file served from FDA server
                type: string
                format: xml


components:
  securitySchemes:
    authToken:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: Uses JWT token stored in request header.
  schemas:
    UserType:
      type: string
      description: >-
        an ordered list of User types associated with privilege levels:

        <br>

        * SAOR: a system administrator with top level privileges

        * VOR: a veterinarian who may create and prescribe protocols

        * MOR: a farm manager to whom protocols may be prescribed, and who may
        create Cases in a protocol

        * TOR: a farm technician who may execute assigned protocols for assigned
        cases

        * FARM: an account aggregating MOR and TOR Users

        * CLINIC: an account aggregating multiple VOR Users who work together

        * UNCONFIRMED: an account that has been requested but not confirmed by
        the owner

        * UNVOR: a User who requests VOR status, with neither email or admin
        approval

        * UNMOR: a User who requests MOR status but email not yet confirmed

        * PREVOR: a confirmed User who requests VOR status but still lacks
        either email confirmation or approval by admin

        * REMOVED: the record of a User who is no longer active and may not log
        in
      enum:
        - 'SAOR'
        - 'VOR'
        - 'MOR'
        - 'TOR'
        - 'FARM'
        - 'CLINIC'
        - 'UNCONFIRMED'
        - 'PREVOR'
        - 'UNVOR'
        - 'UNMOR'
        - 'REMOVED'
      default: 'MOR'
      example: 'VOR'
    User:
      description: a User of a specific `usertype` class
      type: object
      properties:
        id:
          type: integer
          description: unique identifier for the User
          example: 1
        uname:
          description: identifies user, typically an email address
          type: string
          example: testVOR
        userType:
          $ref: '#/components/schemas/UserType'
        email:
          description: email address of user
          type: string
          format: email
          example: testVOR@dairysight.com
        firstname:
          description: first part of user's name
          type: string
          example: Test
        lastname:
          description: last part of user's name
          type: string
          example: Vet
        suffix:
          type: string
          description: degree or qualifier following the name
          example: DVM
      required:
        - id
        - userType
        - email
        - firstname
        - lastname
    SuccessfulLogin:
      description: User object and generated auth token
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: >-
            add this token in X-Auth-Token header to authenticate future
            requests
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...
        filePolicy:
          type: string
          description: policy object for use in embedded image files, expires in 24 hr
          example: 3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a
        fileSignature:
          type: string
          description: signature for file policy object
          example: eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==
    Error:
      type: object
      description: error response per RFC 7807
      required:
        - title
        - status
      properties:
        errorType:
          type: string
          description: a URI identifier that categorizes the error
          example: /errors/incorrect-user-pass
        title:
          type: string
          description: A brief, human-readable message about the error
          example: incorrect username or password
        status:
          type: integer
          description: HTTP status code
          example: 400
        detail:
          type: string
          description: a human-readable description of the specific error
          example: Authentication failed due to incorrect username or password.
        instance:
          type: string
          description: a URI that identifies the specific occurrence of the error
          example: /login/log/abc123
    Comment:
      type: object
      required:
        - comment
        - public
      properties:
        userId:
          description: set null or zero if User wishes to be anonymous
          type: integer
          default: null
          example: 123
        public:
          description: if false, comment is private to site managers
          type: boolean
          default: false
          example: true
        comment:
          type: string
          description: comment from a user
          example: this is wonderful
        created:
          description: >-
            ISO-8601-formatted datetime, time of the comment
          type: string
          format: date-time
          example: 2020-01-10T10:30:37Z
    Relationship:
      type: string
      description: >
        a link between two Users defining a relationship:


        - CLIENT: MOR User on right is a client of VOR User on left

        - EMPLOYEE: TOR User on right is an employee of MOR User on left

        - MEMBER: VOR User on right is a member of CLINIC on left, or MOR User
        on right is a manager of FARM on left
      enum:
        - CLIENT
        - EMPLOYEE
        - MEMBER
      example: CLIENT
    ProtocolShare:
      description: share a protocol with another VOR User
      type: object
      properties:
        px-id:
          type: integer
          description: the `id` identifier of a Protocol
          example: 1
        share-to:
          type: integer
          description: ID f a VOR User who may use the Protocol identified by pxId
          example: 2
        clonable:
          description: >-
            whether User identified by `shareTo`
            has permission to create a clone and modify the clone
          type: boolean
          default: false
          example: true
    ProtocolStatus:
      type: string
      description: >
        status markers for protocols, in order of normal usage flow:


        - UNKNOWN: initial status when a protocol is being designed

        - VALIDATED: currently not used, for use when a validation process is
        implemented

        - PRESCRIBED: after a protocol has been prescribed for at least one
        client

        - INITIATED: after a protocol has been initiated (i.e., has one or more
        Cases)

        - RECALLED: protocol may no longer be prescribed and existing
        prescriptions are recalled

        - DEPRECATED: protocol has been "deleted" by the owner
      enum:
        - PRESCRIBED
        - VALIDATED
        - INITIATED
        - DEPRECATED
        - RECALLED
        - UNKNOWN
      example: PRESCRIBED
    Withhold:
      type: object
      description: >-
        duration after last treatment during which some act is prohibited. Most
        often this restricts when meat or milk may be sold for food.
      properties:
        hoursMeat:
          type: number
          example: 22
          description: number of hours that must pass between exposure and slaughter
        hoursMilk:
          type: number
          example: 5
          description: >-
            number of hours that must pass between exposure and extracting milk
            for consumption
        note:
          type: string
          description: free-form text note
          format: html
          example: <p>improvement apparent</p>
    Instructions:
      description: instructions to execute a protocol
      type: object
      properties:
        considerations:
          description: things to consider
          type: string
          format: html
          example: <p>This is just an example, not a real protocol.</p>
        restrictions:
          description: restrictions applicable to this protocol
          type: string
          format: html
          example: <p>Not for use on real animals.</p>
        dothis:
          description: wqhat to do
          type: string
          format: html
          example: <h3>Examinations to perform</h3>
        recordthis:
          description: what to record
          type: string
          format: html
          example: <p>record every step in your notebook.</p>
        success:
          description: expectations if protocol is successful
          type: string
          format: html
          example: <p>All problems are gone</p>
        failure:
          description: indications of failure
          type: string
          format: html
          example: <p>One or more problems remain</p>
        references:
          description: references to consult for further information
          type: string
          format: html
          example: <a href="https://en.wikipedia.org/wiki/Rickrolling">Wikipedia</a>
    CaseDefinition:
      description: >-
        information used at the time of case selection to determine whether a
        particular protocol may be enrolled and the protocol initiated for a
        particular animal or group of animals (the Case). The Case may be
        enrolled with the Protocol **only** if the Case meets all requirements
        of the CaseDefinition and none of the prohibitions. Other information
        may be advisory, and used at the discretion of the person doing
        enrollment.
      type: object
      properties:
        requireId:
          type: boolean
          description: the Case must include specific ID/s of animal/s to be enrolled
          default: false
          example: false
        requireMor:
          type: boolean
          description: >-
            if true, the MOR enrolling the Case must be identified with a
            Signature
          default: false
          example: false
        contraindications:
          description: considerations that prohibit or suggest against use of this Protocol
          type: string
          format: html
          default: ''
          example: <p>prohibited in animals older than than 24 months</p>
        medical:
          description: medical considerations in selecting and implementing this Protocol
          type: string
          format: html
          example: if fever is present, consider Protocol 12345 instead.
        economic:
          description: economic considerations in selecting and implementing this Protocol
          type: string
          format: html
          default: ''
          example: >-
            culling should be considered as an alternative, as milk production
            is unlikely to return to normal after treatment
        note:
          description: optional note
          type: string
          format: html
          default: ''
          example: <p>overcrowding may be contributing to issues</p>
    FDAspecies:
      type: array
      description: >-
        a class of animals recognized by the FDA. In FDA literature this is
        called a "species", which conflicts with the typical usage of that word.
        "fdaSpecies" in the labeling domain usually corresponds with
        "Eligibility" in the Protocol domain.
      items:
        type: string
        enum:
          - BeefCattle
          - Calves
          - CalvesNotVeal
          - Cats
          - Chickens
          - ChickensBroilers
          - ChickensNotLaying
          - ChickensReplacements
          - DairyCalves
          - DairyHeifers
          - DairyCattle
          - DairyCattleNonLactating
          - Dogs
          - Fish
          - Goats
          - Horses
          - Sheep
          - Swine
          - SwineBreeding
          - Turkeys
          - TurkeysGrowing
          - TurkeysMeatProducing
          - TurkeysNotLaying
          - Catfish
          - Gamebirds
          - Llamas
          - Salmon
          - Emus
          - Bison
          - Other
          - Unidentified
        example:
          ChickensBroilers
    Eligibility:
      description: >
        A class of animal for which a protocol may be used. Normally the `name`
        field is all that is shown in the UI, but the `id` is used internally to
        identify each Eligibility, which should be treated as an immutable
        object. Changes to the array of Eligibilities in a Protocol are done by
        changing the array of `id` numbers. Changes to other fields will have no
        effect at the persistent layer.
      type: object
      required:
        - id
        - name
        - fdaSpecies
      properties:
        id:
          description: identifier
          type: integer
          example: 15
        name:
          description: >-
            A type of animal which is eligible to be treated using a protocol
            having this Eligibility
          type: string
          example: Chickens - Broilers
        fdaSpecies:
          $ref: '#/components/schemas/FDAspecies'
    DoseId:
      type: object
      properties:
        doseId:
          type: integer
          description: key to a label dosage
          example: wip
    SeqSingleDose:
      description: a single dose
      required:
        - _type
      type: object
      properties:
        _type:
          type: string
          description: class of SequenceFunction
          enum:
            - models.api.v1.SeqSingleDose
          example: models.api.v1.SeqSingleDose
    SeqPerDay:
      required:
        - _type
        - frequency
        - totalDoses
      description: >-
        a series of equally-spaced doses specified by the total number of doses
        and an integer number of doses per day
      type: object
      properties:
        _type:
          description:  class of SequenceFunction
          type: string
          enum:
            - models.api.v1.SeqPerDay
          example: models.api.v1.SeqPerDay
        frequency:
          description: how many doses per day
          type: integer
          default: 1
          example: 1
        totalDoses:
          description: total number of doses
          type: integer
          default: 1
          example: 1
    SeqPerDayRange:
      required:
        - _type
        - frequency
        - minDoses
        - maxDoses
      description: >-
        a series of equally-spaced doses specified by the total number of doses
        and an integer number of doses per day
      type: object
      properties:
        _type:
          type: string
          enum:
            - models.api.v1.SeqPerDayRange
          description: class of SequenceFunction
          example: models.api.v1.SeqPerDayRange
        frequency:
          description: how many doses per day
          type: integer
          default: 1
          example: 2
        minDoses:
          description: minimum number of doses to give
          type: integer
          default: 3
          example: 4
        maxDoses:
          description: maximum number of doses to give
          type: integer
          default: 1
          example: 9
    SeqInterval:
      required:
        - _type
        - totalDoses
        - interval
      description: >-
        a series of equally-spaced doses specified by the total number of doses
        and time between sequential doses
      type: object
      properties:
        _type:
          description: class of SequenceFunction
          type: string
          enum:
            - models.api.v1.SeqInterval
          example: models.api.v1.SeqInterval
        totalDoses:
          description: total number of doses
          type: integer
          default: 1
          example: 3
        interval:
          description: ISO-8601 duration from initiation or previous dose
          type: string
          format: duration
          default: PT8H
          example: PT8H
    SeqSeries:
      description: >-
        an ordered sequence of doses at times specified as time since initiation
        of the Protocol
      required:
        - _type
        - intervals
      type: object
      properties:
        _type:
          description: class of SequenceFunction
          type: string
          enum:
            - models.api.v1.SeqSeries
          example: models.api.v1.SeqSeries
        intervals:
          type: array
          items:
            description: ISO-8601 duration from initiation or previous dose
            type: string
            format: duration
            example:
              - PT0S
              - PT3H
              - PT24H
    SequenceFunction:
      description: function to calculate times for a series of doses
      oneOf:
        - $ref: '#/components/schemas/SeqSingleDose'
        - $ref: '#/components/schemas/SeqPerDay'
        - $ref: '#/components/schemas/SeqPerDayRange'
        - $ref: '#/components/schemas/SeqInterval'
        - $ref: '#/components/schemas/SeqSeries'
    MassUnit:
      description: unit of mass or weight
      type: string
      enum:
        - lb
        - t
        - dwt
        - gr
        - mg
        - mcg
        - oz
        - g
        - kg
      example: kg
    MassQuantity:
      required:
        - dimension
        - value
        - symbol
      type: object
      description: a quantity of weight or mass
      properties:
        dimension:
          description: must always be "Mass"
          type: string
          enum:
            - Mass
          example: Mass
        value:
          description: quantity of units specified by symbol
          type: number
          minimum: 0
          default: 1
          exclusiveMinimum: true
          example: 50
        symbol:
          $ref: '#/components/schemas/MassUnit'
    VolumeUnit:
      description: unit of Volume
      type: string
      example: ml
      enum:
        - pt
        - tbsp
        - µl
        - nl
        - oz
        - dl
        - ml
        - qt
        - L
        - gal
        - c
        - tsp
    VolumeQuantity:
      required:
        - dimension
        - value
        - symbol
      type: object
      properties:
        dimension:
          type: string
          description: must always be "Volume"
          example: Volume
          enum:
            - Volume
        value:
          type: number
          description: quantity of units specified by symbol
          minimum: 0
          example: 3
          exclusiveMinimum: true
        symbol:
          $ref: '#/components/schemas/VolumeUnit'
    DimensionlessUnit:
      description: dimensionless unit (each)
      type: string
      enum:
        - ea
        - '%'
        - dz
      example: ea
    DimensionlessQuantity:
      required:
        - dimension
        - value
        - symbol
      type: object
      properties:
        dimension:
          description: must always be Dimensionless
          type: string
          example: Dimensionless
          enum:
            - Dimensionless
        value:
          type: number
          description: number of units specified by symbol
          minimum: 0
          example: 3
          exclusiveMinimum: true
        symbol:
          $ref: '#/components/schemas/DimensionlessUnit'
    DrugQuantity:
      required:
        - quantity
      type: object
      properties:
        quantity:
          oneOf:
            - $ref: '#/components/schemas/MassQuantity'
            - $ref: '#/components/schemas/VolumeQuantity'
            - $ref: '#/components/schemas/DimensionlessQuantity'
      example:
        quantity:
          dimension: Mass
          value: 3
          symbol: oz
    FixedDoseFunction:
      description: a fixed quantity expressed in any available unit
      required:
        - _type
        - dose
      type: object
      properties:
        _type:
          type: string
          description: class of sizeFunction
          enum:
            - models.api.v1.FixedDoseFunction
          example: models.api.v1.FixedDoseFunction
        dose:
          $ref: '#/components/schemas/DrugQuantity'
      example:
        dose:
          quantity:
            dimension: Volume
            value: 3
            symbol: ml
        _type: models.api.v1.FixedDoseFunction
    DoseByWeightFunction:
      description: dose is specified as a quantity per unit of animal weight
      required:
        - _type
        - dose
        - perUnit
      type: object
      properties:
        _type:
          type: string
          description: class of sizeFunction
          enum:
            - models.api.v1.DoseByWeightFunction
          example: models.api.v1.DoseByWeightFunction
        dose:
          $ref: '#/components/schemas/DrugQuantity'
        perUnit:
          $ref: '#/components/schemas/MassQuantity'
      example:
        dose:
          quantity:
            dimension: volume
            value: 3
            symbol: ml
        perUnit:
          dimension: mass
          value: 1
          symbol: kg
        _type: models.api.v1.DoseByWeightFunction
    LoadingDoseByWeightFunction:
      description: >-
        dose is specified as first (loading) dose and following doses per unit
        of animal weight
      required:
        - _type
        - firstDose
        - followDose
        - perUnit
      type: object
      properties:
        _type:
          type: string
          description: class of sizeFunction
          enum:
            - models.api.v1.DoseByWeightFunction
          example: models.api.v1.DoseByWeightFunction
        firstDose:
          $ref: '#/components/schemas/DrugQuantity'
        followDose:
          $ref: '#/components/schemas/DrugQuantity'
        perUnit:
          $ref: '#/components/schemas/MassQuantity'
      example:
        perUnit:
          dimension: mass
          value: 1
          symbol: kg
        followDose:
          quantity:
            dimension: volume
            value: 3
            symbol: ml
        _type: models.api.v1.LoadingDoseByWeightFunction
        firstDose:
          quantity:
            dimension: volume
            value: 6
            symbol: ml
    DrugQuantityRange:
      required:
        - min
        - max
      type: object
      properties:
        min:
          $ref: '#/components/schemas/DrugQuantity'
        max:
          $ref: '#/components/schemas/DrugQuantity'
      example:
        min:
          quantity:
            dimension: Volume
            value: 3
            symbol: ml
        max:
          quantity:
            dimension: Volume
            value: 345
            symbol: ml
    DoseRangeFunction:
      description: >-
        a range of permissible dose size. The User may select any value within
        the range (inclusive).
      required:
        - _type
        - range
      type: object
      properties:
        _type:
          type: string
          description: class of sizeFunction
          enum:
            - models.api.v1.DoseRangeFunction
          example: models.api.v1.DoseRangeFunction
        range:
          $ref: '#/components/schemas/DrugQuantityRange'
    DoseRangeByWeightFunction:
      description: >-
        dose is specified as a range per unit of animal weight. The User may
        select any value within the range (inclusive).
      required:
        - _type
        - range
        - perUnit
      type: object
      properties:
        _type:
          type: string
          description: class of sizeFunction
          enum:
            - models.api.v1.DoseRangeByWeightFunction
          example: models.api.v1.DoseRangeByWeightFunction
        range:
          $ref: '#/components/schemas/DrugQuantityRange'
        perUnit:
          $ref: '#/components/schemas/MassQuantity'
      example:
        perUnit:
          dimension: Mass
          value: 1
          symbol: kg
        _type: models.api.v1.DoseRangeByWeightFunction
        range:
          min:
            quantity:
              dimension: volume
              value: 3
              symbol: ml
          max:
            quantity:
              dimension: volume
              value: 2
              symbol: ml
    SizeFunction:
      description: function to calculate dose size
      oneOf:
        - $ref: '#/components/schemas/FixedDoseFunction'
        - $ref: '#/components/schemas/DoseByWeightFunction'
        - $ref: '#/components/schemas/LoadingDoseByWeightFunction'
        - $ref: '#/components/schemas/DoseRangeFunction'
        - $ref: '#/components/schemas/DoseRangeByWeightFunction'
    DoseFunctions:
      type: object
      properties:
        sequenceFunction:
          $ref: '#/components/schemas/SequenceFunction'
        sizeFunction:
          $ref: '#/components/schemas/SizeFunction'
    Tag:
      description: keyword or tag for classification
      type: object
      properties:
        code:
          description: short code name
          type: string
          maxLength: 15
          example: Example-code
    AmducaClass:
      type: string
      enum:
        - ONLABEL
        - OFFLABEL
        - UNIDENTIFIED
    Treatment:
      description: >-
        describes a series of one or more doses of a single product. sizeFunction and
        sequenceFunction are polymorphic and may depend on additional data available
        when a Case is initiated. For example
        animal weight or other data may be needed.
      type: object
      required:
        - product
        - route
        - sequencefunction
        - sizefunction
      properties:
        id:
          description: >-
            If null, a
            new database record will be created, otherwise updated,
          type: string
          example: B-123
        ownerId:
          description: the `id` key of the VOR User who owns the treatment
          type: integer
          example: 0
        description:
          description: description of Treatment
          type: string
          example: 3.0 ml per kg repeat
        eligibilities:
          description: eligibility criteria for potential cases
          type: array
          items:
            $ref: '#/components/schemas/Eligibility'
        product:
          description: product name
          type: string
          example: MiracleMed
        _dose:
          description: transient string representation of `dosage`
          type: string
          example: 3.0 ml per kg repeat in 6 hours and again in 24 hours
        dosage:
          oneOf:
            - $ref: '#/components/schemas/DoseId'
            - $ref: '#/components/schemas/DoseFunctions'
        route:
          description: route of administration
          type: string
          example: wip
        wtMeatHrs:
          type: integer
          description: hours after treatment when meat must not be sold
          example: wip
        wtMilkHrs:
          type: integer
          description: hours after treatment when milk must not be sold
          example: wip
        wtNote:
          type: string
          description: additional information related to withholding
          example: not for use in cattle over 20 months age
        nada:
          description: NADA or ANADA as specified by the FDA
          type: string
          example: wip
        tags:
          description: keywords for classification
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        note:
          description: general note about the treatment
          type: string
          format: html
          example: <p>a free-form note</p>
        amduca:
          $ref: '#/components/schemas/AmducaClass'
        sequencefunction:
          $ref: '#/components/schemas/SequenceFunction'
        sizefunction:
          $ref: '#/components/schemas/SizeFunction'
    Diagnosis:
      description: >-
        a medical diagnosis for which a Protocol may be used. Normally the
        `name` field is all that is shown in the UI, but the `id` is used
        internally to identify each Diagnosis, which should be treated as an
        immutable object. Changes to the array of Diagnoses in a Protocol are
        achieved by changing the array of `id` numbers. Changes to other fields
        will have no effect at the persistent layer.
      type: object
      properties:
        id:
          type: integer
          description: unique identifier for Diagnosis
          example: 8
        code:
          type: string
          maxLength: 25
          description: wip should this be an enum?
          example: PAIN
        name:
          type: string
          description: free-form text description of the Diagnosis
          example: Pain/inflammation (musculoskeletal), treatment
    Promise:
      description: An act which must be executed on or after enrollment of a Case to a Prescription
      type: object
      required:
        - _type
        - name
        - descrip
        - query
        - when
      properties:
        _type:
          description: server data type to which this Promise will be mapped
          type: string
          enum:
            - models.api.v1.IdPromise
            - models.api.v1.AffirmationPromise
            - models.api.v1.BooleanPromise
            - models.api.v1.StringPromise
            - models.api.v1.MassPromise
            - models.api.v1.CategoryPromise
          example: models.api.v1.IdPromise
        id:
          description: UUID assigned to the promise itself by the server
          type: number
          format: integer
          example: 1
        name:
          description: promise name for the doctor
          type: string
          example: Still in herd? 14d
        descrip:
          description: promise description for the client
          type: string
          example: Require identification of each case enrolled
        query:
          description: question to be answered by client
          type: string
          format: html
          example: Is this animal still in the herd?
        when:
          description: ISO-8601 duration from initiation when promise must be fulfilled
          type: string
          format: duration
          default: PT0H
          example: PT72H
        response:
          description: data supplied by the client to fulfill promise
          type: string
          example: something
        responseBy:
          description: User ID of person supplying response data
          type: integer
          example: 123
        responseTime:
          description: timestamp for response data
          type: string
          example: PT72H
        notify:
          description: notify prescribing doctor when completed
          type: boolean
          default: false
          example: true
        sigRequired:
          description: require signature of respondant
          type: boolean
          default: false
          example: false
    Metadata:
      description: (for future development)
      type: object
      properties:
        key:
          type: string
          description: key to this item
          example: rating
        value:
          type: string
          description: vallue associated with key
          example: good
    Protocol:
      description: a veterinary treatment protocol
      type: object
      required:
        - ownerId
        - name
        - status
        - withhold
        - instructions
      properties:
        id:
          description: >-
            key value created by the database. If zero or null a
            new record will be created.
          type: integer
          format: int64
          example: 12345
        ownerId:
          description: the `id` key of the VOR User who owns the protocol.
          type: integer
          example: 1
        name:
          description: descriptive name of the protocol
          type: string
          example: wip
        shortname:
          description: short name for protocol
          type: string
          example: wip
        created:
          description: >-
            ISO-8601-formatted datetime added by the server when a Protocol is
            first saved
          type: string
          format: date-time
          example: 2020-01-10T10:30:37Z
        edited:
          description: >-
            ISO-8601-formatted datetime updated by the server whenever a
            Protocol is saved
          type: string
          format: date-time
          example: 2020-02-10T10:30:37Z
        status:
          $ref: '#/components/schemas/ProtocolStatus'
        vetNote:
          description: note visible only to the prescribing vet
          type: string
          example: consider prescribing protocol x instead
        withhold:
          $ref: '#/components/schemas/Withhold'
        instructions:
          $ref: '#/components/schemas/Instructions'
        shareAll:
          description: share this protocol with all other vets using the system?
          type: boolean
          default: false
          example: true
        caseDefinition:
          $ref: '#/components/schemas/CaseDefinition'
        treatments:
          description: treatments used in this protocol
          type: array
          items:
            $ref: '#/components/schemas/Treatment'
        tags:
          description: keywords for classification
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        diagnoses:
          description: diagnostic classifiers
          type: array
          items:
            $ref: '#/components/schemas/Diagnosis'
        eligibilities:
          description: eligibility criteria for potential cases
          type: array
          items:
            $ref: '#/components/schemas/Eligibility'
        promises:
          description: wip
          type: array
          items:
            $ref: '#/components/schemas/Promise'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    Px:
      description: >-
        the flattened subset of a Protocol which can be retrieved from the Px
        database table alone, without additional queries.
      type: object
      required:
        - ownerId
        - name
        - created
        - edited
        - status
        - shareAll
      properties:
        id:
          type: integer
          description: unique identifier for Protocol
          example: 0
        ownerId:
          type: integer
          description: unique identifier for User that owns this Protocol
          example: 0
        name:
          type: string
          description: user-friendly identifier for the Protocol
          example: example protocol
        shortname:
          type: string
          description: Short name for the Protocol
          example: EXamp
        created:
          type: string
          format: date-time
          description: ISO-8601 timestamp for Protocol creation
          example: 2020-01-10T22:20:39Z
        edited:
          type: string
          format: date-time
          description: ISO-8601 timestamp for Protocol update
          example: 2020-02-10T22:20:39Z
        status:
          $ref: '#/components/schemas/ProtocolStatus'
        vetNote:
          type: string
          description: note visible only to the prescribing vet
          example: consider prescribing protocol x instead
        wtMeatHrs:
          type: integer
          description: >-
            number of hours that meat may not be sold for food after last
            treatment
          example: 72
        wtMilkHrs:
          type: integer
          description: >-
            number of hours that milk may not be sold for food after last
            treatment
          example: 72
        wtNote:
          type: string
          description: note regarding withholding
          example: Not for use in horses intended for food.
        considerations:
          type: string
          format: html
          description: >-
            free-form text specifying special considerations in choosing or
            using a protocol
          example: <p>think first</p>
        restrictions:
          type: string
          format: html
          description: free-form text note specifying restrictions
          example: <p>not suitable in pregnancy</p>
        dothis:
          type: string
          format: html
          description: free-form text specifying actions to be completed
          example: <p>execute protocol</p>
        recordthis:
          type: string
          format: html
          description: free-form text specifying data to record
          example: case data
        success:
          type: string
          format: html
          description: describes a successful outcome of the protocol
          example: <p>good</p>
        failure:
          type: string
          format: html
          description: describes a failure of the protocol
          example: <p>bad</p>
        references:
          type: string
          format: html
          description: wip references related to the disease or treatment
          example: <a href="https://en.wikipedia.org/wiki/Rickrolling">Wikipedia</a>
        shareAll:
          type: boolean
          default: false
          example: true
          description: >-
            switch to determine whether this Protocol may be shared with all VOR
            users
    Prescription:
      type: object
      properties:
        rxId:
          type: string
          description: UUID identifying the prescription
          example: gG3pBCR1GCMKm89c
        protocol:
          $ref: '#/components/schemas/Protocol'
        vorId:
          type: integer
          description: id of VOR prescribing
          example: 1245
        morId:
          type: integer
          description: id of MOR prescribed to
          example: 69854
        refills:
          type: integer
          description: number of repeats for this script
          default: 0
          example: 0
        expiration:
          type: string
          format: date-time
          description: ISO-8601-formatted datetime defining expiration date
          example: 2021-01-10T10:30:37Z
        created:
          type: string
          format: date-time
          description: >-
            ISO-8601-formatted datetime added by the server when prescription is
            first saved
          example: 2021-08-10T10:30:37Z
        metadata:
          type: string
          description: additional data
          example: " "
        status:
          type: string
          description: status code
          example: DEPRECATED
    PrescriptionRequest:
      description: a Prescription request, before it is recorded and timestamped
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/Protocol'
        morId:
          type: integer
          description: id of MOR prescribed to
          example: 22
        expiration:
          type: string
          format: date-time
          description: expiration date
          example: 2021-08-10T10:30:37Z
        metadata:
          type: string
          description: additional data
          example: " "
        status:
          type: string
          description: prescription status
          example: PRESCRIBED
      example:
        protocol:
          ownerId: 0
          name: example protocol
          shortname: EXamp
          created: 2020-01-10T22:20:39Z
          edited: 2020-01-10T22:20:39Z
          status: UNKNOWN
          withhold:
            hoursMeat: 0
            hoursMilk: 0
            note: ''
          instructions:
            considerations: think first
            restrictions: always
            dothis: execute protocol
            recordthis: case data
            success: good
            failure: bad
            references: ref
          shareAll: false
          shareClonable: false
          caseDefinition:
            pxId: 0
            requireID: true
            requireMOR: true
            medical: really sick
            economic: client in credit
          treatments:
            - id: 0
              ownerId: 0
              description: sample treatment
              note: this is an off-label Treatment
              eligibilities:
                - id: 1
                  name: Beef Cattle
                  fda: beef_cattle
              tags:
                - id: 1
                  code: EXAMPLE
              product: MiracleMed
              _dose: 3.0 ml per kg repeat in 6 hours and again in 24 hours
              route: intr-corporeal
              sequenceFunction:
                intervals:
                  - PT6H
                  - PT24H
                _type: models.api.v1.SeqSeries
              sizeFunction:
                dose:
                  quantity:
                    dimension: Volume
                    value: 3
                    symbol: ml
                perUnit:
                  dimension: Mass
                  value: 1
                  symbol: kg
                _type: models.api.v1.DoseByWeightFunction
              doseNote: some note on dose
              wtMeatHrs: 22
              wtMilkHrs: 5
              wtNote: example
          tags:
            - id: 1
              code: EXAMPLE
          diagnoses:
            - id: 8
              code: PAIN
              name: Pain/inflammation (musculoskeletal), treatment
          eligibilities:
            - id: 1
              name: Beef Cattle
              fda: BeefCattle
          promises:
            - id: 1
              name: test user
              code: EXAMPLE
        morId: 0
        status: DEPRECATED
        metadata: []
    LabelClaim:
      type: object
      required:
        - id
        - fdaSpecies
        - diagnosis
        - dxId
        - dxCode
        - product
        - route
        - wtMeatHrs
        - wtMilkHrs
      properties:
        id:
          type: integer
          description: unique identifier for label
          example: 1
        fdaSpecies:
          $ref: '#/components/schemas/FDAspecies'
        diagnosis:
          type: string
          description: label diagnosis
          example: pain (colic), symptomatic treatment
        dxId:
          type: integer
          description: id of label diagnosis
          example: 2002
        dxCode:
          type: string
          description: code of label diagnosis
          example: '2002'
        product:
          type: string
          description: product trade name
          example: Prevail™ Flunixin Meglumine Injection
        productId:
          type: integer
          description: unique identifier for the product described
          example: 1315018
        _dose:
          type: string
          description: free-form text note on dosage
          example: 3.0 ml per kg repeat in 6 hours and again in 24 hours
        route:
          type: string
          description: route of administration
          example: intr-corporeal
        sequenceFunction:
          $ref: '#/components/schemas/SequenceFunction'
        sizeFunction:
          $ref: '#/components/schemas/SizeFunction'
        doseNote:
          type: string
          format: html
          description: test note about dose
          example: THis can contain <b>html</b> tags
        wtMeatHrs:
          description: meat withholding in hours
          type: integer
          example: 22
        wtMilkHrs:
          type: integer
          description: milk withholding in hours
          example: 5
        wtNote:
          type: string
          description: note on withholding
          example: not for dairy animals
        ndc:
          type: string
          description: FDA NADA or ANADA number
          example: 200-308
        generic:
          type: string
          description: generic name for product
          example: OXYTETRACYCLINE
    GreenbookHeader:
      required:
        - ndc
        - proprietery
        - nonProp
        - ingredients
        - labeler
        - productType
        - marketCat
        - appNumber
        - link
        - status
        - lastChanged
      type: object
      properties:
        ndc:
          type: string
          description: FDA NDC number
          example: 0010-3495
        proprietery:
          type: string
          description: proprietary name
          example: Bio-Mycin 200
        nonProp:
          description: generic name
          type: string
          example: OXYTETRACYCLINE
        ingredients:
          type: string
          description: ingredient or ingredients
          example: OXYTETRACYCLINE
        labeler:
          type: string
          description: name of labeler
          example: Boehringer Ingelheim Vetmedica, Inc.
        productType:
          type: string
          description: type of product
          example: OTC ANIMAL DRUG
        marketCat:
          type: string
          description: market category
          example: ANADA
        appNumber:
          type: string
          description: application number
          example: ANADA200008
        link:
          type: string
          description: public link to fda label
          example: https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml
        status:
          type: integer
          description: FDA status
          example: 0
        lastChanged:
          type: string
          format: date-time
          description: date of last label change
          example: 2020-05-16T16:19:12Z
  responses:
    NoContent:
      description: There is no content to send for this request,.
    BadRequest:
      description: The server could not understand the request due to invalid syntax.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: The client must authenticate itself to get the requested response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: The client does not have access rights to the content.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The server can not find the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: User
    description: Endpoints and models related to user management.
  - name: Protocol
    description: Endpoints and models related to protocol management.
  - name: Prescription
    description: Endpoints and models related to prescription management.
  - name: Case
    description: Endpoints and models related to case management.
  - name: Promise
    description: Endpoints and models related to promise management.
